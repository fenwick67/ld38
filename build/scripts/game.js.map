{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src\\controllers\\FullscreenController.js",
    "src\\controllers\\LevelController.js",
    "src\\index.js",
    "src\\objects\\RainbowText.js",
    "src\\states\\LoadingState.js",
    "src\\states\\PlayingState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "class FullscreenController{\r\n  constructor(game){\r\n    this.game = game;\r\n\r\n    //stop antialiasing for fullscreen compat\r\n    //this.game.antialias = false;\r\n\r\n    //add element\r\n    this.el = document.createElement('span');\r\n    this.el.classList.add(\"fullscreen-button\");\r\n\r\n    let text = document.createElement('span');\r\n    text.textContent=\"Go Fullscreen\";\r\n    this.el.appendChild(text);\r\n\r\n    let svg = document.createElementNS(\"http://www.w3.org/2000/svg\",'svg');\r\n    svg.setAttribute(\"width\", \"30px\");\r\n    svg.setAttribute(\"height\", \"30px\");\r\n    svg.setAttribute('viewBox',\"0 0 50 50\")\r\n    svg.setAttribute(\"version\", \"1.1\");\r\n    svg.innerHTML = `\r\n    <polygon points=\"0 0 30 0 0 30 0 0\" />\r\n    <polygon points=\"50 50 20 50 50 20 50 50\" />\r\n    `;\r\n    this.el.appendChild(svg);\r\n\r\n    this.el.addEventListener('click',()=>this.gofull() );\r\n    document.getElementById('content-after').appendChild(this.el);\r\n  }\r\n\r\n\r\n  gofull() {\r\n    if (this.game.scale.isFullScreen){\r\n        this.game.scale.stopFullScreen();\r\n    }\r\n    else{\r\n        this.game.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n        this.game.scale.startFullScreen(false);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default FullscreenController;\r\n",
    "class LevelController{\r\n  constructor(game){\r\n    this.game = game;\r\n  }\r\n}\r\n\r\nexport default LevelController;\r\n",
    "import LoadingState from 'states/LoadingState';\r\nimport PlayingState from 'states/PlayingState';\r\n\r\nimport FullscreenController from 'controllers/FullscreenController'\r\nimport LevelController from 'controllers/LevelController'\r\n\r\nclass Game extends Phaser.Game {\r\n\r\n\tconstructor() {\r\n\t\tsuper(640, 480, Phaser.AUTO, 'content', null);\r\n\t\tthis.fullscreenController = new FullscreenController(this);\r\n\r\n\t\tthis.state.add('LoadingState', LoadingState, false);\r\n\t\tthis.state.add('PlayingState', PlayingState, false);\r\n\r\n\t\tthis.state.start('LoadingState');\r\n\r\n\r\n\t}\r\n\r\n}\r\n\r\nwindow.game = new Game();\r\n",
    "class RainbowText extends Phaser.Text {\r\n\r\n\tconstructor(game, x, y, text) {\r\n\r\n\t\tsuper(game, x, y, text, { font: \"5em Arial\", fill: \"#ff0044\", align: \"center\" });\r\n\r\n\t\tthis._speed = 125; //ms\r\n\t\tthis._colorIndex = 0;\r\n\t\tthis._colors = ['#ee4035', '#f37736', '#fdf498', '#7bc043', '#0392cf'];\r\n\r\n\t\tthis.colorize();\r\n\t\tthis.startTimer();\r\n\r\n\t\tthis.game.stage.addChild(this);\r\n\r\n\t}\r\n\r\n\tstartTimer() {\r\n\t\tthis.game.time.events.loop(this._speed, this.colorize, this).timer.start();\r\n\t}\r\n\r\n\tcolorize() {\r\n\r\n\t\tfor (let i = 0; i < this.text.length; i++) {\r\n\r\n\t\t\tif (this._colorIndex === this._colors.length) {\r\n\t\t\t\tthis._colorIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.addColor(this._colors[this._colorIndex], i);\r\n\t\t\tthis._colorIndex++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RainbowText;\r\n",
    "import RainbowText from 'objects/RainbowText';\r\n\r\nclass LoadingState extends Phaser.State {\r\n\r\n\tpreload(){\r\n\r\n\t\t// assets go here\r\n    game.load.tilemap('world', 'maps/world.json', null, Phaser.Tilemap.TILED_JSON);\r\n    game.load.image('tiles', 'vendor/platformer_deluxe/Tiles/tiles_spritesheet.png');\r\n    console.log('loading');\r\n\t\tgame.load.onLoadComplete.add(this.loadComplete,this\t);\r\n\t\tlet center = { x: this.game.world.centerX, y: this.game.world.centerY }\r\n\t\tthis.text = new RainbowText(this.game, center.x, center.y, \"- phaser -\\nwith a sprinkle of\\nES6 dust!\");\r\n\t\tthis.text.anchor.set(0.5);\r\n\t\tconsole.log('preload')\r\n\t}\r\n\r\n\tcreate() {\r\n\t\tconsole.log('create')\r\n\t}\r\n\r\n\tloadComplete(){\r\n\t\tconsole.log('loaded')\r\n\t\tthis.text.text = 'loaded, press X to start'\r\n\t}\r\n\r\n}\r\n\r\nexport default LoadingState;\r\n",
    "import RainbowText from 'objects/RainbowText';\r\n\r\nclass PlayingState extends Phaser.State {\r\n\r\n\tcreate() {\r\n\t\tlet center = { x: this.game.world.centerX, y: this.game.world.centerY }\r\n\t\tlet text = new RainbowText(this.game, center.x, center.y, \"Loaded\");\r\n\t\ttext.anchor.set(0.5);\r\n\t\tthis.game.stage.backgroundColor = '#787878';\r\n\t\tmap = this.game.add.tilemap('world');\r\n\t}\r\n\r\n}\r\n\r\nexport default PlayingState;\r\n"
  ]
}